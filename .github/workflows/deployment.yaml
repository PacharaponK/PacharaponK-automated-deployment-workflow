name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Compile
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: List files before compiling
        run: ls -l

      - name: Set up C++ Environment
        run: sudo apt-get install -y g++

      - name: Compile Code
        run: g++ -std=c++17 -o main main.cpp

      - name: List files after compiling
        run: ls -l

      - name: Run the Program
        run: ./main # Run the compiled executable to see if it works correctly

  lint:
    name: Compliance Check - Linting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Linter (cppcheck)
        run: sudo apt-get install -y cppcheck

      - name: Run Linter (cppcheck)
        run: cppcheck --enable=all --inconclusive --quiet . # รัน cppcheck เพื่อตรวจสอบโค้ด

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build, lint]  # Ensure deployment happens after successful build and lint

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}  # Set up your private SSH key in GitHub secrets

      - name: Deploy Application
        run: |
          echo "Deploying to production server..."
          ssh user@your-server "cd /path/to/your/app && git pull && ./deploy_script.sh"
          # Replace with your actual deployment commands (e.g., pulling code and running a deploy script)
