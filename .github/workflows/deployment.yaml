name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Compile
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: List files before compiling
        run: ls -l

      - name: Set up C++ Environment
        run: sudo apt-get install -y g++

      - name: Compile Code
        run: g++ -std=c++17 -o main main.cpp

      - name: List files after compiling
        run: ls -l

  lint:
    name: Compliance Check - Linting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Linter (cppcheck)
        run: sudo apt-get install -y cppcheck

      - name: Run Linter (cppcheck)
        run: cppcheck --enable=all --inconclusive --quiet . # รัน cppcheck เพื่อตรวจสอบโค้ด

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Testing Framework
        run: sudo apt-get install -y cmake

      - name: Run Unit Tests
        run: |
          mkdir build
          cd build
          cmake ..
          make
          ./tests # Assuming your tests are in the 'tests' folder

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build, lint, test] # Ensures deployment happens after successful build, lint, and test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Deploy Application
        run: |
          echo "Deploying to production server..."
          # Replace with actual deployment commands
          ssh user@your-server "cd /path/to/your/app && git pull && ./deploy_script.sh"
